{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "azureblob_1_Connection_Name": {
      "type": "string",
      "defaultValue": "azureblob-1"
    },
    "azureblob_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "iotst"
    },
    "azureblob_1_accountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account the connector should use."
      },
      "defaultValue": "iotgen2"
    },
    "azureblob_1_accessKey": {
      "type": "securestring",
      "metadata": {
        "description": "Specify a valid primary/secondary storage account access key."
      }
    },
    "azureblob_1_privacySetting": {
      "type": "string",
      "metadata": {
        "description": "Privacy Setting"
      },
      "allowedValues": [
        "None",
        "Private",
        "Organizational",
        "Public"
      ]
    },
    "LogicAppLocation": {
      "type": "string",
      "minLength": 1,
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "uaecentral",
        "southafricanorth",
        "southafricawest",
        "switzerlandnorth",
        "germanynorth"
      ],
      "defaultValue": "ukwest"
    },
    "LogicAppName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "NVSlave1"
    }
  },
  "variables": {},
  "resources": [
    {
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "For_each": {
              "type": "Foreach",
              "foreach": "@body('Parse_JSON')?['OrganizationList']",
              "actions": {
                "Append_to_array_variable": {
                  "type": "AppendToArrayVariable",
                  "inputs": {
                    "name": "OrgIdArray",
                    "value": "@body('GenerateHash5')"
                  },
                  "runAfter": {
                    "GenerateHash5": [
                      "Succeeded"
                    ]
                  }
                },
                "For_each_2": {
                  "type": "Foreach",
                  "foreach": "@items('For_each')?['properties']?['endpoints']",
                  "actions": {
                    "HTTP": {
                      "type": "Http",
                      "inputs": {
                        "method": "GET",
                        "uri": "https://isvapi.netvisor.fi/customerlist.nv",
                        "headers": {
                          "Content-Type": "text/xml",
                          "User-Agent": "libwww-perl/6.02",
                          "X-Netvisor-Authentication-CustomerId": "@items('For_each')?['properties']?['XNetvisorAuthenticationCustomerId']",
                          "X-Netvisor-Authentication-MAC": "@{body('GenerateHash5')}",
                          "X-Netvisor-Authentication-PartnerId": "@items('For_each')?['properties']?['XNetvisorAuthenticationPartnerId']",
                          "X-Netvisor-Authentication-Sender": "@items('For_each')?['properties']?['XNetvisorAuthenticationSender']",
                          "X-Netvisor-Authentication-Timestamp": "@variables('nau')",
                          "X-Netvisor-Authentication-TransactionId": "@{guid()}",
                          "X-Netvisor-Interface-Language": "FI",
                          "X-Netvisor-Organisation-ID": "@items('For_each')?['properties']?['XNetvisorOrganisationID']"
                        }
                      },
                      "runAfter": {},
                      "operationOptions": "SuppressWorkflowHeaders"
                    },
                    "GenerateHash5_2": {
                      "type": "Function",
                      "inputs": {
                        "body": "{\n  \"nvid\": @{items('For_each')?['properties']?['Organizationname']},\n  \"nvid0\": @{variables('nau')},\n  \"nvid1\": @{items('For_each')?['properties']?['XNetvisorInterfaceLanguage']},\n  \"nvid2\": @{guid()},\n  \"nvid3\": @{items('For_each')?['OrgID']},\n  \"nvid4\": @{items('For_each')?['properties']?['XNetvisorAuthenticationSender']},\n  \"nvid5\": @{items('For_each')?['properties']?['XNetvisorAuthenticationPartnerId']},\n  \"nvid6\": @{items('For_each')?['properties']?['XNetvisorAuthenticationCustomerId']},\n  \"nvid7\": @{items('For_each')?['properties']?['PartnerPrivateKey']},\n  \"nvid8\": @{items('For_each')?['properties']?['CustomerPrivateKey']},\n  \"nvidHOST\": @{variables('nvhost')}/@{items('For_each_2')}",
                        "function": {
                          "id": "/subscriptions/512e81a9-a0ac-4012-b285-d2e933d63713/resourceGroups/Internal/providers/Microsoft.Web/sites/katcherff/functions/GenerateHash5"
                        }
                      },
                      "runAfter": {
                        "HTTP": [
                          "Succeeded"
                        ]
                      }
                    },
                    "HTTP_2": {
                      "type": "Http",
                      "inputs": {
                        "method": "GET",
                        "uri": "https://isvapi.netvisor.fi/@{items('For_each_2')}",
                        "headers": {
                          "Content-Type": "text/xml",
                          "User-Agent": "libwww-perl/6.02",
                          "X-Netvisor-Authentication-CustomerId": "@items('For_each')?['properties']?['XNetvisorAuthenticationCustomerId']",
                          "X-Netvisor-Authentication-MAC": "@{body('GenerateHash5_2')}",
                          "X-Netvisor-Authentication-PartnerId": "@items('For_each')?['properties']?['XNetvisorAuthenticationPartnerId']",
                          "X-Netvisor-Authentication-Sender": "@items('For_each')?['properties']?['XNetvisorAuthenticationSender']",
                          "X-Netvisor-Authentication-Timestamp": "@variables('nau')",
                          "X-Netvisor-Authentication-TransactionId": "@{guid()}",
                          "X-Netvisor-Interface-Language": "FI",
                          "X-Netvisor-Organisation-ID": "@items('For_each')?['properties']?['XNetvisorOrganisationID']"
                        }
                      },
                      "runAfter": {
                        "GenerateHash5_2": [
                          "Succeeded"
                        ]
                      },
                      "runtimeConfiguration": {
                        "staticResult": {
                          "name": "HTTP_20",
                          "staticResultOptions": "Enabled"
                        }
                      }
                    },
                    "Create_blob": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": "@body('HTTP_2')",
                        "path": "/datasets/default/files",
                        "queries": {
                          "folderPath": "/hierar/00/",
                          "name": "@{variables('nau')}@{items('For_each_2')}",
                          "queryParametersSingleEncoded": true
                        }
                      },
                      "runAfter": {
                        "HTTP_2": [
                          "Succeeded"
                        ]
                      },
                      "runtimeConfiguration": {
                        "contentTransfer": {
                          "transferMode": "Chunked"
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "Append_to_array_variable": [
                      "Succeeded"
                    ]
                  }
                },
                "GenerateHash5": {
                  "type": "Function",
                  "inputs": {
                    "body": {
                      "nvid": "@items('For_each')?['properties']?['Organizationname']",
                      "nvid0": "@variables('nau')",
                      "nvid1": "@items('For_each')?['properties']?['XNetvisorInterfaceLanguage']",
                      "nvid2": "@guid()",
                      "nvid3": "@items('For_each')?['OrgID']",
                      "nvid4": "@items('For_each')?['properties']?['XNetvisorAuthenticationSender']",
                      "nvid5": "@items('For_each')?['properties']?['XNetvisorAuthenticationPartnerId']",
                      "nvid6": "@items('For_each')?['properties']?['XNetvisorAuthenticationCustomerId']",
                      "nvid7": "@items('For_each')?['properties']?['PartnerPrivateKey']",
                      "nvid8": "@items('For_each')?['properties']?['CustomerPrivateKey']",
                      "nvidHOST": "@variables('nvhost')"
                    },
                    "function": {
                      "id": "/subscriptions/512e81a9-a0ac-4012-b285-d2e933d63713/resourceGroups/Internal/providers/Microsoft.Web/sites/katcherff/functions/GenerateHash5"
                    }
                  },
                  "runAfter": {}
                }
              },
              "runAfter": {
                "Get_Time_String": [
                  "Succeeded"
                ]
              }
            },
            "Generate_Organisation_List_JSON": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "OrgIDList",
                    "type": "object",
                    "value": {
                      "OrganizationList": [
                        {
                          "OrgID": 1,
                          "properties": {
                            "CustomerPrivateKey": "BAFFF19DE754F2BCD811B04BEC8D4EB7",
                            "Organizationname": "Tempp0",
                            "PartnerPrivateKey": "9FB867E55CD8C8B84F97D9AAC643975E",
                            "XNetvisorAuthenticationCustomerId": "ND_128271_66165",
                            "XNetvisorAuthenticationPartnerId": "Pet_45848",
                            "XNetvisorAuthenticationSender": "DWFunction4",
                            "XNetvisorAuthenticationTimestamp": "",
                            "XNetvisorAuthenticationTransactionId": "",
                            "XNetvisorInterfaceLanguage": "FI",
                            "XNetvisorOrganisationID": "1657207-0",
                            "endpoints": [
                              "getorders.nv"
                            ],
                            "hash": ""
                          }
                        },
                        {
                          "OrgID": 2,
                          "properties": {
                            "CustomerPrivateKey": "",
                            "Organizationname": "Tempp1",
                            "PartnerPrivateKey": "",
                            "XNetvisorAuthenticationCustomerId": "",
                            "XNetvisorAuthenticationPartnerId": "",
                            "XNetvisorAuthenticationSender": "",
                            "XNetvisorAuthenticationTimestamp": "",
                            "XNetvisorAuthenticationTransactionId": "",
                            "XNetvisorInterfaceLanguage": "FI",
                            "XNetvisorOrganisationID": "",
                            "endpoints": [
                              "getorders.nv",
                              "getpurchaseorders.nv",
                              "getcustomers.nv"
                            ],
                            "hash": ""
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "runAfter": {}
            },
            "Get_Time_String": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "nau",
                    "type": "string",
                    "value": "convertFromUtc(utcNow(), 'Egypt Standard Time')"
                  }
                ]
              },
              "runAfter": {
                "Ini_Org_ID_Array_": [
                  "Succeeded"
                ]
              }
            },
            "Ini_Org_ID_Array_": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "OrgIdArray",
                    "type": "array"
                  }
                ]
              },
              "runAfter": {
                "Parse_JSON": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "nvhost",
                    "type": "string",
                    "value": "https://isvapi.netvisor.fi"
                  }
                ]
              },
              "runAfter": {
                "Generate_Organisation_List_JSON": [
                  "Succeeded"
                ]
              }
            },
            "Parse_JSON": {
              "type": "ParseJson",
              "inputs": {
                "content": "@variables('OrgIDList')",
                "schema": {
                  "properties": {
                    "OrganizationList": {
                      "items": {
                        "properties": {
                          "OrgID": {
                            "type": "integer"
                          },
                          "properties": {
                            "properties": {
                              "CustomerPrivateKey": {
                                "type": "string"
                              },
                              "Organizationname": {
                                "type": "string"
                              },
                              "PartnerPrivateKey": {
                                "type": "string"
                              },
                              "XNetvisorAuthenticationCustomerId": {
                                "type": "string"
                              },
                              "XNetvisorAuthenticationPartnerId": {
                                "type": "string"
                              },
                              "XNetvisorAuthenticationSender": {
                                "type": "string"
                              },
                              "XNetvisorAuthenticationTimestamp": {
                                "type": "string"
                              },
                              "XNetvisorAuthenticationTransactionId": {
                                "type": "string"
                              },
                              "XNetvisorInterfaceLanguage": {
                                "type": "string"
                              },
                              "XNetvisorOrganisationID": {
                                "type": "string"
                              },
                              "endpoints": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "hash": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "required": [
                          "OrgID",
                          "properties"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "TRmessageRT": "daw791"
                }
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {},
          "staticResults": {
            "HTTP_20": {
              "status": "Succeeded",
              "outputs": {
                "statusCode": "OK",
                "headers": {}
              }
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureblob_1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'azureblob')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureblob_1_Connection_Name'))]",
                "connectionName": "[parameters('azureblob_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "name": "[parameters('LogicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('LogicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('azureblob_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('azureblob_1_Connection_Name')]",
      "location": "ukwest",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'ukwest', '/managedApis/', 'azureblob')]"
        },
        "displayName": "[parameters('azureblob_1_Connection_DisplayName')]",
        "parameterValues": {
          "accountName": "[parameters('azureblob_1_accountName')]",
          "accessKey": "[parameters('azureblob_1_accessKey')]",
          "privacySetting": "[parameters('azureblob_1_privacySetting')]"
        }
      }
    }
  ],
  "outputs": {}
}